<?xml version='1.0' encoding='utf-8'?>
<gobject:boxed xmlns:gobject="http://jessevdk.github.com/cldoc/gobject/1.0" id="API Reference::CdnExpansionContext" name="CdnExpansionContext" typedef="yes" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Expansion context</brief>
  <doc>Expansion context.

<ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref> is a boxed class which provides a context for storing
expansions and defines during parsing. Expansion contexts can have parent
contexts, allowing to construct a prioritized hierarchy of contexts to
lookup values in.</doc>
  <function id="cdn_expansion_context_add_define" name="cdn_expansion_context_add_define">
    <brief>Define a new value with the specified name in the expansion context.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_add_define::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_add_define::name" name="name">
      <doc>the define name</doc>
      <type builtin="yes" name="gchar" qualifier="*" />
    </argument>
    <argument id="cdn_expansion_context_add_define::value" name="value">
      <doc>the define value</doc>
      <type name="CdnExpansion" qualifier="*" ref="API Reference::CdnExpansion#API Reference::CdnExpansion" />
    </argument>
  </function>
  <function id="cdn_expansion_context_add_defines" name="cdn_expansion_context_add_defines">
    <brief>Add multiple defines from a hash table to the defines of &amp;lt;context&amp;gt;.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_add_defines::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_add_defines::defines" name="defines">
      <doc>the defines to add</doc>
      <type name="GHashTable" qualifier="*" />
    </argument>
  </function>
  <function id="cdn_expansion_context_add_expansion" name="cdn_expansion_context_add_expansion">
    <brief>Add an expansion to the top of the context.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_add_expansion::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_add_expansion::expansion" name="expansion">
      <doc>the expansion</doc>
      <type name="CdnExpansion" qualifier="*" ref="API Reference::CdnExpansion#API Reference::CdnExpansion" />
    </argument>
  </function>
  <function id="cdn_expansion_context_add_expansions" name="cdn_expansion_context_add_expansions">
    <brief>Add multiple expansions to the top of the expansion context.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_add_expansions::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_add_expansions::expansions" name="expansions">
      <doc>A &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnExpansion#API Reference::CdnExpansion">CdnExpansion</ref></doc>
      <type name="GSList" qualifier="*" />
    </argument>
  </function>
  <function id="cdn_expansion_context_foreach_define" name="cdn_expansion_context_foreach_define">
    <brief>Call <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_foreach_define::hfunc">cdn_expansion_context_foreach_define::hfunc</ref> for each define in the expansion context.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_foreach_define::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_foreach_define::hfunc" name="hfunc">
      <doc>the callback function.</doc>
      <type name="GHFunc" />
    </argument>
    <argument id="cdn_expansion_context_foreach_define::userdata" name="userdata">
      <doc>user data provided to the callback.</doc>
      <type builtin="yes" name="gpointer" />
    </argument>
  </function>
  <function id="cdn_expansion_context_get_define" name="cdn_expansion_context_get_define">
    <brief>Get the expansion for a particular define name.</brief>
    <return>
      <doc>A <ref ref="API Reference::CdnExpansion#API Reference::CdnExpansion">CdnExpansion</ref></doc>
      <type name="CdnExpansion" qualifier="*" ref="API Reference::CdnExpansion#API Reference::CdnExpansion" />
    </return>
    <argument id="cdn_expansion_context_get_define::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_get_define::name" name="name">
      <doc>The name of the define</doc>
      <type builtin="yes" name="gchar" qualifier="*" />
    </argument>
  </function>
  <function id="cdn_expansion_context_get_expansion" name="cdn_expansion_context_get_expansion">
    <brief>Get an expansion at a particular depth.</brief>
    <return>
      <doc>A <ref ref="API Reference::CdnExpansion#API Reference::CdnExpansion">CdnExpansion</ref></doc>
      <type name="CdnExpansion" qualifier="*" ref="API Reference::CdnExpansion#API Reference::CdnExpansion" />
    </return>
    <argument id="cdn_expansion_context_get_expansion::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_get_expansion::depth" name="depth">
      <doc>The depth of the context at which to get the expansion</doc>
      <type builtin="yes" name="gint" />
    </argument>
  </function>
  <function id="cdn_expansion_context_get_expansions" name="cdn_expansion_context_get_expansions">
    <brief>Get a list of expansions in &amp;lt;context&amp;gt;.</brief>
    <return>
      <doc>a &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnExpansion#API Reference::CdnExpansion">CdnExpansion</ref></doc>
      <type name="GSList" qualifier="*" transfer-ownership="container" />
    </return>
    <argument id="cdn_expansion_context_get_expansions::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_get_local_defines" name="cdn_expansion_context_get_local_defines">
    <brief>Get the defines of this context, but not those in the parent context.</brief>
    <return>
      <doc>a &amp;lt;GHashTable&amp;gt; or `NULL`.</doc>
      <type name="GHashTable" qualifier="*" />
    </return>
    <argument id="cdn_expansion_context_get_local_defines::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_get_local_expansions" name="cdn_expansion_context_get_local_expansions">
    <brief>Get the expansions defined in this context but not those in the parent context.</brief>
    <return>
      <doc>a &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnExpansion#API Reference::CdnExpansion">CdnExpansion</ref></doc>
      <type name="GSList" qualifier="*" transfer-ownership="container" />
    </return>
    <argument id="cdn_expansion_context_get_local_expansions::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_get_marker" name="cdn_expansion_context_get_marker">
    <brief>Get the current marker of the context</brief>
    <doc>Get the current marker of the context. The marker is used to determine
whether or not the context has been changed. Each change increases the
marker.

</doc>
    <return>
      <doc>the context marker.</doc>
      <type name="gulong" />
    </return>
    <argument id="cdn_expansion_context_get_marker::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_get_parent" name="cdn_expansion_context_get_parent">
    <brief>Get the parent context of &amp;lt;context&amp;gt;.</brief>
    <return>
      <doc>the parent context or `NULL`.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" transfer-ownership="full" />
    </return>
    <argument id="cdn_expansion_context_get_parent::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_increment_define" name="cdn_expansion_context_increment_define">
    <brief>Increments a define counter, at the specified expansion index, wit</brief>
    <doc>Increments a define counter, at the specified expansion index, with
the corresponding increment (may be negative).

</doc>
    <return>
      <doc>the old value of the counter</doc>
      <type builtin="yes" name="gint" />
    </return>
    <argument id="cdn_expansion_context_increment_define::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_increment_define::name" name="name">
      <doc>the define name</doc>
      <type builtin="yes" name="gchar" qualifier="*" />
    </argument>
    <argument id="cdn_expansion_context_increment_define::exidx" name="exidx">
      <doc>the expansion index</doc>
      <type builtin="yes" name="gint" />
    </argument>
    <argument id="cdn_expansion_context_increment_define::num" name="num">
      <doc>the increment</doc>
      <type builtin="yes" name="gint" />
    </argument>
  </function>
  <function id="cdn_expansion_context_merge" name="cdn_expansion_context_merge">
    <brief>Merge the content of <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_merge::other">cdn_expansion_context_merge::other</ref> into &amp;lt;context&amp;gt;.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_merge::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_merge::other" name="other">
      <doc>another <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref></doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_new" name="cdn_expansion_context_new">
    <brief>Create a new expansion context with a given parent context</brief>
    <doc>Create a new expansion context with a given parent context. Use
<ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_unref">cdn_expansion_context_unref</ref> if the context is no longer needed.

</doc>
    <return>
      <doc>a new <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref></doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" transfer-ownership="full" />
    </return>
    <argument id="cdn_expansion_context_new::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_new_unreffed" name="cdn_expansion_context_new_unreffed">
    <brief>Create a new expansion context with a given parent context</brief>
    <doc>Create a new expansion context with a given parent context. The
corresponding context is floating, i.e. it has a reference count
of 0. To correctly destroy the context, use <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_ref">cdn_expansion_context_ref</ref>
first and then <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_unref">cdn_expansion_context_unref</ref>. You usually will want
to use <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_new">cdn_expansion_context_new</ref> instead of this function.

</doc>
    <return>
      <doc>a new <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref></doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </return>
    <argument id="cdn_expansion_context_new_unreffed::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_ref" name="cdn_expansion_context_ref">
    <brief>Increase the reference count of the expansion context.</brief>
    <return>
      <doc>&amp;lt;context&amp;gt;</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" transfer-ownership="full" />
    </return>
    <argument id="cdn_expansion_context_ref::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_remove_expansion" name="cdn_expansion_context_remove_expansion">
    <brief>Remove the specified expansion from the context.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_remove_expansion::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_remove_expansion::expansion" name="expansion">
      <doc>the expansion</doc>
      <type name="CdnExpansion" qualifier="*" ref="API Reference::CdnExpansion#API Reference::CdnExpansion" />
    </argument>
  </function>
  <function id="cdn_expansion_context_shared_defines" name="cdn_expansion_context_shared_defines">
    <brief>Use the defines from <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_shared_defines::from">cdn_expansion_context_shared_defines::from</ref> as a shared set of define</brief>
    <doc>Use the defines from <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_shared_defines::from">cdn_expansion_context_shared_defines::from</ref> as a shared set of defines
in &amp;lt;context&amp;gt;. When new defines are added to &amp;lt;context&amp;gt;, these
defines will also appear in <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_shared_defines::from">cdn_expansion_context_shared_defines::from</ref> and vice versa.</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_shared_defines::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_shared_defines::from" name="from">
      <doc>another <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref></doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_truncate" name="cdn_expansion_context_truncate">
    <brief>Truncate &amp;lt;context&amp;gt; to contain only parent contexts up to <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_truncate::parent">cdn_expansion_context_truncate::parent</ref>.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_truncate::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
    <argument id="cdn_expansion_context_truncate::parent" name="parent">
      <doc>the parent <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref></doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_expansion_context_unref" name="cdn_expansion_context_unref">
    <brief>Decrease the reference count of the expansion context</brief>
    <doc>Decrease the reference count of the expansion context. If the
reference counts drops to 0, then the memory associated with
the context is freed and <ref ref="API Reference::CdnExpansionContext#cdn_expansion_context_unref::self">cdn_expansion_context_unref::self</ref> is no longer valid.</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_expansion_context_unref::self" name="self">
      <doc>a <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref>.</doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
</gobject:boxed>