<?xml version='1.0' encoding='utf-8'?>
<gobject:class xmlns:gobject="http://jessevdk.github.com/cldoc/gobject/1.0" id="API Reference::CdnSelector" name="CdnSelector" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Selector class</brief>
  <doc>Selector class.

<ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref> is a class which encodes a codyn modeling language selector. A selector
receives a set of objects as input and performs filtering and selection based on
a pipeline of special purpose selectors. This allows for powerful contextual selection
of nodes based on certain criteria, matching names, types, children etc. Selectors
can be built incrementally using the various append functions, or parsed from a string
using <ref ref="API Reference::CdnSelector#cdn_selector_parse">cdn_selector_parse</ref>.</doc>
  <base access="public">
    <type name="GObject" />
  </base>
  <implements access="public">
    <type name="CdnStatement" ref="API Reference::CdnStatement#API Reference::CdnStatement" />
  </implements>
  <gobject:property id="API Reference::CdnSelector::root" mode="construct-only" name="root">
    <type name="CdnObject" qualifier="*" ref="API Reference::CdnObject#API Reference::CdnObject" />
  </gobject:property>
  <function id="cdn_selector_append" name="cdn_selector_append">
    <brief>Append a matching identifier selector to the pipeline</brief>
    <doc>Append a matching identifier selector to the pipeline. Identifier matches
will match on names of objects and variables where appropriate. Note that
the <ref ref="API Reference::CdnSelector#cdn_selector_append::identifier">cdn_selector_append::identifier</ref> embedded string may contain generators and can match multiple
names at the same time.

</doc>
    <return>
      <doc>a selector component identifier.</doc>
      <type builtin="yes" name="guint" />
    </return>
    <argument id="cdn_selector_append::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_append::identifier" name="identifier">
      <doc>an embedded string</doc>
      <type name="CdnEmbeddedString" qualifier="*" ref="API Reference::CdnEmbeddedString#API Reference::CdnEmbeddedString" />
    </argument>
  </function>
  <function id="cdn_selector_append_partial" name="cdn_selector_append_partial">
    <brief>Append a partial matching identifier selector to the pipeline</brief>
    <doc>Append a partial matching identifier selector to the pipeline. Identifier matches
will match on names of objects and variables where appropriate. Note that
the <ref ref="API Reference::CdnSelector#cdn_selector_append_partial::identifier">cdn_selector_append_partial::identifier</ref> embedded string may contain generators and can match multiple
names at the same time.

</doc>
    <return>
      <doc>the identifier of the added selector component</doc>
      <type builtin="yes" name="guint" />
    </return>
    <argument id="cdn_selector_append_partial::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_append_partial::identifier" name="identifier">
      <doc>an embedded string</doc>
      <type name="CdnEmbeddedString" qualifier="*" ref="API Reference::CdnEmbeddedString#API Reference::CdnEmbeddedString" />
    </argument>
  </function>
  <function id="cdn_selector_append_pseudo" name="cdn_selector_append_pseudo">
    <brief>Append a pseudo selector.</brief>
    <return>
      <doc>the identifier of the added selector component</doc>
      <type builtin="yes" name="guint" />
    </return>
    <argument id="cdn_selector_append_pseudo::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_append_pseudo::type" name="type">
      <doc>A <ref ref="API Reference#API Reference::CdnSelectorPseudoType">CdnSelectorPseudoType</ref></doc>
      <type name="CdnSelectorPseudoType" ref="API Reference#API Reference::CdnSelectorPseudoType" />
    </argument>
    <argument id="cdn_selector_append_pseudo::arguments" name="arguments">
      <doc>A &amp;lt;GSList&amp;gt; of &amp;lt;GObject&amp;gt;</doc>
      <type name="GSList" qualifier="*" />
    </argument>
  </function>
  <function id="cdn_selector_append_regex" name="cdn_selector_append_regex">
    <brief>Append a regular expression matching identifier selector to the pipeline</brief>
    <doc>Append a regular expression matching identifier selector to the pipeline.
Identifier matches will match on names of objects and variables where appropriate.
Note that the &amp;lt;identifier&amp;gt; embedded string may contain generators and can match multiple
names at the same time. The regular expression must match the full identifier of the
object. See <ref ref="API Reference::CdnSelector#cdn_selector_append_regex_partial">cdn_selector_append_regex_partial</ref> for matching only partially.

</doc>
    <return>
      <doc>a selector component identifier.</doc>
      <type builtin="yes" name="guint" />
    </return>
    <argument id="cdn_selector_append_regex::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_append_regex::regex" name="regex">
      <doc>an embedded string</doc>
      <type name="CdnEmbeddedString" qualifier="*" ref="API Reference::CdnEmbeddedString#API Reference::CdnEmbeddedString" />
    </argument>
  </function>
  <function id="cdn_selector_append_regex_partial" name="cdn_selector_append_regex_partial">
    <brief>Append a partial regular expression matching identifier selector to the pipeline</brief>
    <doc>Append a partial regular expression matching identifier selector to the pipeline.
Identifier matches will match on names of objects and variables where appropriate.
Note that the &amp;lt;identifier&amp;gt; embedded string may contain generators and can match multiple
names at the same time.

</doc>
    <return>
      <doc>a selector component identifier.</doc>
      <type builtin="yes" name="guint" />
    </return>
    <argument id="cdn_selector_append_regex_partial::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_append_regex_partial::regex" name="regex">
      <doc>an embedded string</doc>
      <type name="CdnEmbeddedString" qualifier="*" ref="API Reference::CdnEmbeddedString#API Reference::CdnEmbeddedString" />
    </argument>
  </function>
  <function id="cdn_selector_as_string" name="cdn_selector_as_string">
    <brief>Get a textual representation of the selector pipeline.</brief>
    <return>
      <doc>a new string representation of the selector</doc>
      <type builtin="yes" name="gchar" qualifier="*" transfer-ownership="full" />
    </return>
    <argument id="cdn_selector_as_string::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
  </function>
  <function id="cdn_selector_escape_identifier" name="cdn_selector_escape_identifier">
    <brief>Escapes an identifier if needed.</brief>
    <return>
      <doc>the escaped identifier</doc>
      <type builtin="yes" name="gchar" qualifier="*" transfer-ownership="full" />
    </return>
    <argument id="cdn_selector_escape_identifier::name" name="name">
      <doc>the name</doc>
      <type builtin="yes" name="gchar" qualifier="*" />
    </argument>
  </function>
  <function id="cdn_selector_get_implicit_children" name="cdn_selector_get_implicit_children">
    <brief>Get whether the selector uses implicit children</brief>
    <doc>Get whether the selector uses implicit children. When set, implicit children
cause children to be selected from the input of the selector, as if
the "children" selector component was at the beginning of the pipeline.

</doc>
    <return>
      <doc>`TRUE` if the selector has implicit children, `FALSE` otherwise.</doc>
      <type builtin="yes" name="gboolean" />
    </return>
    <argument id="cdn_selector_get_implicit_children::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
  </function>
  <function id="cdn_selector_get_in_context" name="cdn_selector_get_in_context">
    <brief>Get the in-context for a particular selector.</brief>
    <return>
      <doc>A &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnSelection#API Reference::CdnSelection">CdnSelection</ref></doc>
      <type name="GSList" qualifier="*" />
    </return>
    <argument id="cdn_selector_get_in_context::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_get_in_context::id" name="id">
      <doc>The selector id</doc>
      <type builtin="yes" name="guint" />
    </argument>
  </function>
  <function id="cdn_selector_get_last_id" name="cdn_selector_get_last_id">
    <brief>Get the id of the last added selector component.</brief>
    <return>
      <doc>the last selector component id</doc>
      <type builtin="yes" name="guint" />
    </return>
    <argument id="cdn_selector_get_last_id::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
  </function>
  <function id="cdn_selector_get_out_context" name="cdn_selector_get_out_context">
    <brief>Get the out-context for a particular selector.</brief>
    <return>
      <doc>A &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnSelection#API Reference::CdnSelection">CdnSelection</ref></doc>
      <type name="GSList" qualifier="*" />
    </return>
    <argument id="cdn_selector_get_out_context::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_get_out_context::id" name="id">
      <doc>The selector id</doc>
      <type builtin="yes" name="guint" />
    </argument>
  </function>
  <function id="cdn_selector_get_parts" name="cdn_selector_get_parts">
    <brief>Get the selector parts</brief>
    <doc>Get the selector parts. The returned list contains the specification
of all the components in the selector pipeline in the form of &amp;lt;CdnSelectorPart&amp;gt;.

</doc>
    <return>
      <doc>a &amp;lt;GSList&amp;gt;.</doc>
      <type name="GSList" qualifier="*" />
    </return>
    <argument id="cdn_selector_get_parts::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
  </function>
  <function id="cdn_selector_is_pseudo_name" name="cdn_selector_is_pseudo_name">
    <brief>Check whether a name is a pseudo selector.</brief>
    <return>
      <doc>`TRUE` if the name is a pseudo selector, `FALSE` otherwise</doc>
      <type builtin="yes" name="gboolean" />
    </return>
    <argument id="cdn_selector_is_pseudo_name::name" name="name">
      <doc>the name</doc>
      <type builtin="yes" name="gchar" qualifier="*" />
    </argument>
  </function>
  <function id="cdn_selector_new" name="cdn_selector_new">
    <brief>Create a new selector at the specified <ref ref="API Reference::CdnSelector#cdn_selector_new::root">cdn_selector_new::root</ref>
    </brief>
    <doc>Create a new selector at the specified <ref ref="API Reference::CdnSelector#cdn_selector_new::root">cdn_selector_new::root</ref>. The root object
can be used to set the value of the object returned by the root
pseudo selector.

</doc>
    <return>
      <doc>a new <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref></doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" transfer-ownership="full" />
    </return>
    <argument id="cdn_selector_new::root" name="root">
      <doc>the root</doc>
      <type allow-none="yes" name="CdnObject" qualifier="*" ref="API Reference::CdnObject#API Reference::CdnObject" />
    </argument>
  </function>
  <function id="cdn_selector_parse" name="cdn_selector_parse">
    <brief>Parse a selector from a string.</brief>
    <return>
      <doc>A <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref></doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" transfer-ownership="full" />
    </return>
    <argument id="cdn_selector_parse::root" name="root">
      <doc>A <ref ref="API Reference::CdnObject#API Reference::CdnObject">CdnObject</ref></doc>
      <type allow-none="yes" name="CdnObject" qualifier="*" ref="API Reference::CdnObject#API Reference::CdnObject" />
    </argument>
    <argument id="cdn_selector_parse::s" name="s">
      <doc>The selector</doc>
      <type builtin="yes" name="gchar" qualifier="*" />
    </argument>
    <argument id="cdn_selector_parse::error" name="error">
      <doc>a &amp;lt;GError&amp;gt;.</doc>
      <type allow-none="yes" name="GError " qualifier="**" />
    </argument>
  </function>
  <function id="cdn_selector_select" name="cdn_selector_select">
    <brief>Select objects (from <ref ref="API Reference::CdnSelector#cdn_selector_select::parent">cdn_selector_select::parent</ref>) using the selector.</brief>
    <return>
      <doc>A &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnSelection#API Reference::CdnSelection">CdnSelection</ref></doc>
      <type name="GSList" qualifier="*" transfer-ownership="full" />
    </return>
    <argument id="cdn_selector_select::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_select::parent" name="parent">
      <doc>A &amp;lt;GObject&amp;gt;</doc>
      <type name="GObject" qualifier="*" />
    </argument>
    <argument id="cdn_selector_select::type" name="type">
      <doc>A <ref ref="API Reference#API Reference::CdnSelectorType">CdnSelectorType</ref></doc>
      <type name="CdnSelectorType" ref="API Reference#API Reference::CdnSelectorType" />
    </argument>
    <argument id="cdn_selector_select::context" name="context">
      <doc>A <ref ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext">CdnExpansionContext</ref></doc>
      <type name="CdnExpansionContext" qualifier="*" ref="API Reference::CdnExpansionContext#API Reference::CdnExpansionContext" />
    </argument>
  </function>
  <function id="cdn_selector_select_set" name="cdn_selector_select_set">
    <brief>Select objects (from &amp;lt;parent&amp;gt;) using the selector.</brief>
    <return>
      <doc>A &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnSelection#API Reference::CdnSelection">CdnSelection</ref></doc>
      <type name="GSList" qualifier="*" transfer-ownership="full" />
    </return>
    <argument id="cdn_selector_select_set::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_select_set::parents" name="parents">
      <doc>A &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnSelection#API Reference::CdnSelection">CdnSelection</ref></doc>
      <type name="GSList" qualifier="*" />
    </argument>
    <argument id="cdn_selector_select_set::type" name="type">
      <doc>A <ref ref="API Reference#API Reference::CdnSelectorType">CdnSelectorType</ref></doc>
      <type name="CdnSelectorType" ref="API Reference#API Reference::CdnSelectorType" />
    </argument>
  </function>
  <function id="cdn_selector_set_define_context" name="cdn_selector_set_define_context">
    <brief>Set a define context identifier in the selector for the last selecto</brief>
    <doc>Set a define context identifier in the selector for the last selector
component. When set, the expansion context generated by the selector component
will be stored in a define with the name <ref ref="API Reference::CdnSelector#cdn_selector_set_define_context::id">cdn_selector_set_define_context::id</ref>.</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_selector_set_define_context::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_set_define_context::id" name="id">
      <doc>the define context id</doc>
      <type builtin="yes" name="gchar" qualifier="*" />
    </argument>
  </function>
  <function id="cdn_selector_set_from_set" name="cdn_selector_set_from_set">
    <brief>Set the from set of the selector.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_selector_set_from_set::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_set_from_set::selections" name="selections">
      <doc>A &amp;lt;GSList&amp;gt; of <ref ref="API Reference::CdnSelection#API Reference::CdnSelection">CdnSelection</ref></doc>
      <type name="GSList" qualifier="*" />
    </argument>
  </function>
  <function id="cdn_selector_set_implicit_children" name="cdn_selector_set_implicit_children">
    <brief>Sets whether the selector will apply an implicit "children" selector.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_selector_set_implicit_children::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_set_implicit_children::isimplicit" name="isimplicit">
      <doc>implicit children.</doc>
      <type builtin="yes" name="gboolean" />
    </argument>
  </function>
  <function id="cdn_selector_set_partial" name="cdn_selector_set_partial">
    <brief>Set or unset all selector components present in the selector to b</brief>
    <doc>Set or unset all selector components present in the selector to be
partial. Note that selector components which are added after this
are not affected.</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_selector_set_partial::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_set_partial::partial" name="partial">
      <doc>whether or not to set partial</doc>
      <type builtin="yes" name="gboolean" />
    </argument>
  </function>
  <function id="cdn_selector_set_self" name="cdn_selector_set_self">
    <brief>Set the selection representing the "self" pseudo selector.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="cdn_selector_set_self::self" name="self">
      <doc>a <ref ref="API Reference::CdnSelector#API Reference::CdnSelector">CdnSelector</ref>.</doc>
      <type name="CdnSelector" qualifier="*" ref="API Reference::CdnSelector#API Reference::CdnSelector" />
    </argument>
    <argument id="cdn_selector_set_self::selection" name="selection">
      <doc>a <ref ref="API Reference::CdnSelection#API Reference::CdnSelection">CdnSelection</ref>.</doc>
      <type name="CdnSelection" qualifier="*" ref="API Reference::CdnSelection#API Reference::CdnSelection" />
    </argument>
  </function>
</gobject:class>